*,
*:before,
*:after {
  box-sizing: inherit;
  user-select: none;
  outline: none;
  -webkit-touch-callout: none;
}

* {
  margin: 0;
  padding: 0;
}

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

:focus {
  outline: none;
}

::-moz-focus-inner {
  border: 0;
}

a {
  color: inherit;
  outline: none;
  pointer-events: auto;
  text-decoration: none;
}

button {
  background: none;
  border: none;
  border-radius: none;
  color: inherit;
  font: inherit;
  outline: none;
  pointer-events: auto;
}

img {
  vertical-align: middle;
}

input,
textarea {
  appearance: none;
  background: none;
  border: none;
  border-radius: 0;
  outline: none;
  pointer-events: auto;
}

ol,
ul {
  list-style: none;
}

.project__presentation__media__image, .about__media__image, .noise::before, .navigation, .preloader {
  height: 100%;
  left: 0;
  object-fit: cover;
  position: absolute;
  top: 0;
  width: 100%;
}

.home__intro, .about__box, .preloader {
  align-items: center;
  display: flex;
  justify-content: center;
}

.dg.ac {
  z-index: 99999 !important;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
body {
  font-size: 1.5rem;
}

.preloader__title {
  font-size: 1.7rem;
}
@media (max-width: 767px) {
  .preloader__title {
    font-size: 1.4rem;
  }
}

.project__info__label, .project__label {
  font-size: 2rem;
  font-weight: lighter;
}

.project__info__titles {
  font-family: "Bigilla";
  font-size: 2.4rem;
}

.about__awards__list__column {
  font-family: "Bigilla";
  font-size: 4rem;
}
@media (max-width: 1024px) {
  .about__awards__list__column {
    font-size: 2.4rem;
    font-weight: 400;
  }
}
@media (max-width: 767px) {
  .about__awards__list__column {
    font-family: "Supreme";
    font-size: 1.5rem;
  }
}

.home__categories__title, .footer__link {
  font-family: "Bigilla";
  font-size: 15rem;
}
@media (max-width: 1024px) {
  .home__categories__title, .footer__link {
    font-size: 8rem;
  }
}
@media (max-width: 767px) {
  .home__categories__title, .footer__link {
    font-size: 4rem;
  }
}

.project__title {
  font-family: "Bigilla";
  font-weight: bold;
  font-size: 14rem;
}

.home__works__list__link, .home__works__title, .home__myself__title, .about__awards__title, .about__info__title, .about__location__title, .preloader__name span span {
  font-family: "Bigilla";
  font-weight: bold;
  font-size: 20rem;
}
@media (max-width: 1024px) {
  .home__works__list__link, .home__works__title, .home__myself__title, .about__awards__title, .about__info__title, .about__location__title, .preloader__name span span {
    font-size: 10rem;
  }
}
@media (max-width: 767px) {
  .home__works__list__link, .home__works__title, .home__myself__title, .about__awards__title, .about__info__title, .about__location__title, .preloader__name span span {
    font-size: 4rem;
  }
}

.home__works__list__link, .home__works__title, .home__myself__title, .about__awards__title, .about__info__title, .about__location__title, .preloader__name span span {
  font-family: "Bigilla";
  font-weight: bold;
  font-size: 20rem;
}
@media (max-width: 1024px) {
  .home__works__list__link, .home__works__title, .home__myself__title, .about__awards__title, .about__info__title, .about__location__title, .preloader__name span span {
    font-size: 14rem;
  }
}
@media (max-width: 767px) {
  .home__works__list__link, .home__works__title, .home__myself__title, .about__awards__title, .about__info__title, .about__location__title, .preloader__name span span {
    font-size: 7rem;
  }
}

.home__title, .about__intro__title span span {
  font-family: "Bigilla";
  font-weight: bold;
  font-size: 37rem;
}
@media (max-width: 1024px) {
  .home__title, .about__intro__title span span {
    font-size: 14rem;
  }
}
@media (max-width: 767px) {
  .home__title, .about__intro__title span span {
    font-size: 7rem;
  }
}

html {
  font-size: calc(100vw / 1920 * 10);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}
@media (max-width: 1024px) {
  html {
    font-size: 10px;
  }
}

body {
  /* Add background-color, color and font-family */
  background-color: #1a1a1a;
  color: #f6f5f1;
  font-family: "Supreme";
  text-transform: uppercase;
}
@media (max-width: 1920px) {
  body {
    font-size: 15px;
  }
}

[data-animation=paragraph] span,
[data-animation=title] span {
  display: inline-block;
  overflow: hidden;
  vertical-align: top;
}

.preloader {
  background: #f6f5f1;
  color: #1a1a1a;
  flex-direction: column;
  height: 100vh;
  overflow: hidden;
  position: fixed;
  transform-origin: 0 0;
  z-index: 5;
  display: none;
}
.preloader--loaded {
  transform: scaleY(0);
}

.preloader__name {
  font-size: 0;
  text-align: center;
  max-width: 117.2rem;
  margin-top: -10vh;
}
.preloader__name span {
  margin-top: 1rem;
  display: inline-block;
  overflow: hidden;
}
@media (max-width: 767px) {
  .preloader__name {
    width: 22.2rem;
    margin-top: 0;
  }
}

.preloader__box {
  align-items: center;
  bottom: 6.4rem;
  display: flex;
  justify-content: space-around;
  left: 50%;
  position: absolute;
  transform: translateX(-50%);
  width: 100%;
}

.stars {
  animation: spin 4s linear infinite;
  fill: #1a1a1a;
  height: 1.8rem;
  transition: all 0.8s;
  width: 1.8rem;
}
@media (max-width: 1024px) {
  .stars {
    height: 1.25rem;
    width: 1.25rem;
  }
}
@media (max-width: 767px) {
  .stars {
    height: 1.05rem;
    width: 1.05rem;
  }
}

.preloader__title {
  display: inline-block;
}

.navigation {
  pointer-events: none;
  position: fixed;
  z-index: 4;
}

.navigation__link {
  pointer-events: auto;
  position: absolute;
  top: 4rem;
}
.navigation__link:first-child {
  left: 4rem;
}
@media (max-width: 767px) {
  .navigation__link:first-child {
    left: 2rem;
  }
}
.navigation__link:last-child {
  right: 4rem;
}
@media (max-width: 767px) {
  .navigation__link:last-child {
    right: 2rem;
  }
}

.footer {
  margin-top: 30rem;
}
@media (max-width: 1024px) {
  .footer {
    margin-top: 18.8888rem;
  }
}
@media (max-width: 767px) {
  .footer {
    margin-top: 10.7142rem;
  }
}

.footer__label {
  margin: 50.2rem 0;
  text-align: center;
}
@media (max-width: 1024px) {
  .footer__label {
    margin: 34rem 0;
  }
}
@media (max-width: 767px) {
  .footer__label {
    margin: 20rem 0;
  }
}

.footer__box {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
}

.footer__link {
  font-weight: bold;
  line-height: 1.2;
  width: fit-content;
}
.footer__link:nth-child(even) {
  justify-self: end;
}

.footer__name {
  margin-top: 3rem;
  fill: #f6f5f1;
}

.noise::before {
  background-image: url(6cec54440035593dc35ec2f2b0d9b7d6.gif);
  position: fixed;
  content: "";
  opacity: 0.025;
  pointer-events: none;
  z-index: 3;
}

.about__box {
  height: 100vh;
  position: relative;
}
@media (max-width: 1023px) {
  .about__box {
    overflow: hidden;
  }
}

.about__intro__title {
  max-width: 171.8rem;
  font-size: 0;
}
@media (max-width: 1024px) {
  .about__intro__title {
    margin-top: -14vh;
    width: 70rem;
  }
}
@media (max-width: 767px) {
  .about__intro__title {
    margin-top: -10vh;
    width: 30rem;
  }
}
.about__intro__title span:nth-child(4) {
  padding-top: 4rem;
}
.about__label {
  bottom: 4rem;
  position: absolute;
  right: 4rem;
}

.about__box__image {
  position: absolute;
  top: 40rem;
  right: 21.2rem;
  z-index: -1;
}
@media (max-width: 1024px) {
  .about__box__image {
    top: 36.3rem;
    left: 26.8rem;
    bottom: 15.4rem;
    right: auto;
  }
}
@media (max-width: 767px) {
  .about__box__image {
    top: 36.3rem;
    left: 13.8rem;
    bottom: 15.4rem;
    right: auto;
  }
}

.about__media {
  height: 74.8rem;
  width: 74.8rem;
}
@media (max-width: 1280px) {
  .about__media {
    height: 50.8rem;
    width: 60.8rem;
  }
}
@media (max-width: 1023px) {
  .about__media {
    height: 42.8rem;
    width: 42.8rem;
  }
}
@media (max-width: 767px) {
  .about__media {
    height: 32.6rem;
    width: 32.6rem;
  }
}

.about__media__image {
  object-fit: cover;
  filter: blur(3px) grayscale(0.2);
  opacity: 0.5;
}

.about__location__label {
  line-height: 1.6;
  letter-spacing: 0.0375rem;
  margin: 50.2rem auto;
  max-width: 36.1rem;
}
@media (max-width: 1024px) {
  .about__location__label {
    margin: 34rem auto !important;
    width: 26.1rem;
  }
}
@media (max-width: 767px) {
  .about__location__label {
    margin: 20rem auto !important;
  }
}

.about__location__title {
  font-weight: 400;
  margin-bottom: 26.6rem;
  margin-left: 8rem;
}
@media (max-width: 1024px) {
  .about__location__title {
    margin-bottom: 16rem;
    margin-left: 2rem;
  }
}
@media (max-width: 767px) {
  .about__location__title {
    margin-bottom: 10.8rem;
  }
}

.about__location__labels {
  line-height: 1.6;
  letter-spacing: 0.0375rem;
  margin: 2.4rem auto 0;
  max-width: 46.1rem;
}
@media (max-width: 767px) {
  .about__location__labels {
    margin-left: 2rem;
  }
}

.about__info__title {
  font-weight: 400;
  margin-top: 50.2rem;
  margin-bottom: 26.6rem;
  margin-left: 8rem;
}
@media (max-width: 1024px) {
  .about__info__title {
    margin-bottom: 16rem;
    margin-left: 2rem;
    margin-top: 34rem;
  }
}
@media (max-width: 767px) {
  .about__info__title {
    margin-bottom: 10.8rem;
    margin-top: 20rem;
  }
}

.about__info__labels {
  letter-spacing: 0.0375rem;
  line-height: 1.6;
  margin: 2.4rem auto 0;
  max-width: 46.1rem;
}
@media (max-width: 767px) {
  .about__info__labels {
    margin-left: 2rem;
    width: 34rem;
  }
}

.about__awards__title {
  font-weight: 400;
  margin-bottom: 26.6rem;
  margin-left: 8rem;
  margin-top: 50.2rem;
}
@media (max-width: 1024px) {
  .about__awards__title {
    margin-bottom: 16rem;
    margin-left: 2rem;
    margin-top: 34rem;
  }
}
@media (max-width: 767px) {
  .about__awards__title {
    margin-bottom: 10.8rem;
    margin-top: 20rem;
  }
}

.about__awards__list__item {
  font-weight: bold;
  padding: 4.4rem 8rem;
  position: relative;
  transition: all 0.2s;
}
.about__awards__list__item:hover {
  background-color: #f6f5f1;
  color: #1a1a1a;
}
@media (max-width: 1024px) {
  .about__awards__list__item {
    padding: 3rem 2rem;
  }
}
@media (max-width: 767px) {
  .about__awards__list__item {
    padding: 1.6rem 2rem;
  }
}

.about__awards__stroke {
  border-top: 1px solid rgba(246, 245, 241, 0.2);
  left: 0;
  position: absolute;
  top: 0;
  transform-origin: left;
  width: 100%;
}

.about_awards__list__box {
  overflow: hidden;
  display: grid;
  grid-template-columns: 20vw 50vw 30vw;
}
@media (max-width: 1024px) {
  .about_awards__list__box {
    grid-template-columns: 24vw 1fr 20vw;
  }
}
@media (max-width: 767px) {
  .about_awards__list__box {
    grid-template-columns: 13.4rem 1fr;
    grid-template-rows: 1fr 1fr;
  }
}

.about__awards__list__column {
  display: inline-block;
}
@media (max-width: 767px) {
  .about__awards__list__column {
    line-height: 1.5;
  }
}

.home__intro {
  position: relative;
  height: 100vh;
}

.home__title {
  max-width: 181.7rem;
}
@media (max-width: 1024px) {
  .home__title {
    width: 68rem;
  }
}
@media (max-width: 767px) {
  .home__title {
    width: 32.6rem;
  }
}

.home__label {
  bottom: 4rem;
  position: absolute;
  right: 4rem;
}
@media (max-width: 767px) {
  .home__label {
    right: 2rem;
  }
}

.home__link {
  bottom: 4rem;
  cursor: pointer;
  left: 4rem;
  position: absolute;
  text-transform: uppercase;
}
@media (max-width: 767px) {
  .home__link {
    left: 2rem;
  }
}

.home__myself__label {
  margin: 50.2rem 0;
  text-align: center;
}
@media (max-width: 1024px) {
  .home__myself__label {
    margin: 34rem 0;
  }
}
@media (max-width: 767px) {
  .home__myself__label {
    margin: 20rem 0;
  }
}

.home__myself__title {
  display: inline-block;
  margin-bottom: 26.6rem;
  white-space: nowrap;
}
.home__myself__title span {
  display: inline-block;
  vertical-align: middle;
}
@media (max-width: 1024px) {
  .home__myself__title {
    margin-bottom: 16rem;
  }
}
@media (max-width: 767px) {
  .home__myself__title {
    margin-bottom: 10.8rem;
  }
}

.home__myself__description {
  margin: auto;
  max-width: 51.1rem;
  line-height: 1.6;
  letter-spacing: 0.0375rem;
}
.home__myself__description:last-child {
  margin-top: 2.4rem;
}
@media (max-width: 767px) {
  .home__myself__description {
    margin-left: 2rem;
    width: 35rem;
  }
}

.home__categories__list {
  margin: 50.2rem 0;
}
@media (max-width: 1024px) {
  .home__categories__list {
    margin: 34rem 0;
  }
}
@media (max-width: 767px) {
  .home__categories__list {
    margin: 20rem 0;
  }
}

.home__categories__list__item {
  padding: 7.6rem 0;
  position: relative;
}
@media (max-width: 767px) {
  .home__categories__list__item {
    padding: 3rem 0;
  }
}
.home__categories__list__item:nth-child(1) h2 {
  transform: translateX(33.4rem);
}
@media (max-width: 1024px) {
  .home__categories__list__item:nth-child(1) h2 {
    transform: translateX(26rem);
  }
}
@media (max-width: 767px) {
  .home__categories__list__item:nth-child(1) h2 {
    transform: translateX(6.8rem);
  }
}
.home__categories__list__item:nth-child(2) h2 {
  transform: translateX(83.9rem);
}
@media (max-width: 1024px) {
  .home__categories__list__item:nth-child(2) h2 {
    transform: translateX(10rem);
  }
}
@media (max-width: 767px) {
  .home__categories__list__item:nth-child(2) h2 {
    transform: translateX(15.2rem);
  }
}
.home__categories__list__item:nth-child(3) h2 {
  transform: translateX(26.7rem);
}
@media (max-width: 1024px) {
  .home__categories__list__item:nth-child(3) h2 {
    transform: translateX(28rem);
  }
}
@media (max-width: 767px) {
  .home__categories__list__item:nth-child(3) h2 {
    transform: translateX(6.4rem);
  }
}

.home__categories__stroke {
  border-top: 1px solid rgba(246, 245, 241, 0.2);
  display: inline-block;
  left: 0;
  position: absolute;
  top: 0;
  transform-origin: left;
  width: 100%;
}

.home__categories__title {
  font-weight: 400;
  width: fit-content;
}

.home__works__label {
  margin-bottom: 50.2rem;
  text-align: center;
}
@media (max-width: 1024px) {
  .home__works__label {
    margin: 34rem 0;
  }
}
@media (max-width: 767px) {
  .home__works__label {
    margin: 20rem 0;
  }
}

.home__works__title {
  display: inline-block;
  margin-bottom: 26.6rem;
  white-space: nowrap;
}
.home__works__title span {
  display: inline-block;
  vertical-align: middle;
}
@media (max-width: 1024px) {
  .home__works__title {
    margin-bottom: 16rem;
  }
}
@media (max-width: 767px) {
  .home__works__title {
    margin-bottom: 10.8rem;
  }
}

.home__works__list__item {
  transition: all 0.2s;
}
.home__works__list__item:hover {
  background-color: #f6f5f1;
  color: #1a1a1a;
}

@media (max-width: 767px) {
  .home__works__list__link {
    line-height: 1.2;
  }
}

.home__works__link__text {
  display: inline-block;
}

.home__works__list__item:nth-child(1) .home__works__link__text {
  transform: translateX(34vw);
}

.home__works__list__item:nth-child(2) .home__works__link__text {
  transform: translateX(20vw);
}

.home__works__list__item:nth-child(3) .home__works__link__text {
  transform: translateX(40vw);
}

.home__works__list__item:nth-child(4) .home__works__link__text {
  transform: translateX(13vw);
}

.home__works__list__item:nth-child(5) .home__works__link__text {
  transform: translateX(38vw);
}

.home__works__list__item:nth-child(6) .home__works__link__text {
  transform: translateX(20vw);
}

.home__works__list__item:nth-child(7) .home__works__link__text {
  transform: translateX(43vw);
}

.project__title {
  margin-bottom: 7.8rem;
  margin-top: 24.8rem;
  text-align: center;
}

.project__label {
  margin-bottom: 21.6rem;
  text-align: center;
}

.project__presentation__wrapper {
  position: relative;
}

.project__presentation__media {
  height: 117.4rem;
  margin: 0 8rem 12rem;
  max-width: 176rem;
  position: relative;
}

.project__presentation__media__image {
  object-fit: cover;
}

.project__info__box {
  display: grid;
  grid-template-columns: 38.8rem 38.8rem 12.6rem;
  margin: auto;
  max-width: 90.2rem;
}
.project__info__box:first-child {
  margin-bottom: 2.8rem;
}
.project__info__box:last-child {
  margin-bottom: 12rem;
}

.project__info__label {
  opacity: 0.8;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/